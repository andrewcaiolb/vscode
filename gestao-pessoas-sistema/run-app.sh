#!/bin/bash

# Definir diret√≥rio base
BASE_DIR="$(pwd)"
echo "üìÇ Diret√≥rio base: $BASE_DIR"

# Vari√°veis de ambiente
BACKEND_DIR="$BASE_DIR/backend/src"
FRONTEND_DIR="$BASE_DIR/frontend"
BACKEND_PORT=5001
FRONTEND_PORT=3000

# Cores para output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

# Verificar se os diret√≥rios existem
if [ ! -d "$BACKEND_DIR" ]; then
    echo -e "${RED}‚ùå Diret√≥rio do backend n√£o encontrado: $BACKEND_DIR${NC}"
    exit 1
fi

if [ ! -d "$FRONTEND_DIR" ]; then
    echo -e "${RED}‚ùå Diret√≥rio do frontend n√£o encontrado: $FRONTEND_DIR${NC}"
    exit 1
fi

# Fun√ß√£o para verificar se um processo est√° rodando na porta
check_port() {
    lsof -i:$1 > /dev/null 2>&1
    return $?
}

# Fun√ß√£o para iniciar o backend
start_backend() {
    echo -e "${BLUE}üì¶ Iniciando o Backend...${NC}"
    cd "$BACKEND_DIR" || exit
    
    echo "üî® Restaurando depend√™ncias..."
    dotnet restore
    
    echo "üèóÔ∏è Buildando o projeto..."
    dotnet build
    
    echo "üåê Iniciando a API..."
    dotnet run &
    cd "$BASE_DIR" || exit
}

# Fun√ß√£o para iniciar o frontend
start_frontend() {
    echo -e "${BLUE}üé® Iniciando o Frontend...${NC}"
    cd "$FRONTEND_DIR" || exit
    
    if [ ! -d "node_modules" ]; then
        echo "üì¶ Instalando depend√™ncias do Frontend..."
        npm install
    fi
    
    echo "üöÄ Iniciando o servidor React..."
    npm start &
    cd "$BASE_DIR" || exit
}

# Limpar processos anteriores
if check_port $BACKEND_PORT; then
    echo -e "${RED}‚ö†Ô∏è Porta $BACKEND_PORT em uso. Finalizando processo...${NC}"
    kill $(lsof -t -i:$BACKEND_PORT) 2>/dev/null
fi

if check_port $FRONTEND_PORT; then
    echo -e "${RED}‚ö†Ô∏è Porta $FRONTEND_PORT em uso. Finalizando processo...${NC}"
    kill $(lsof -t -i:$FRONTEND_PORT) 2>/dev/null
fi

# Iniciar aplica√ß√µes
start_backend
start_frontend

echo -e "${GREEN}‚úÖ Sistema iniciado com sucesso!${NC}"
echo -e "${GREEN}üìù Acessos:${NC}"
echo -e "   Backend API: https://localhost:$BACKEND_PORT"
echo -e "   Swagger UI: https://localhost:$BACKEND_PORT/swagger"
echo -e "   Frontend: http://localhost:$FRONTEND_PORT"

# Aguardar t√©rmino dos processos
trap 'kill $(jobs -p)' EXIT
wait